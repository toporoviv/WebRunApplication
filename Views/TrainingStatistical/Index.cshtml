<link rel="stylesheet" href="~/css/PersonalAccountStyle.css" />

<body>
<div class="card">
    <h3>Статистические показатели динамики общего времени тренировочного процесса по месяцам</h3>
</div>

<table id="custom_table">
    <tr>
        <th rowspan = 2 style="text-align: center;">№</th>
        <th rowspan = 2 style="text-align: center;">Дата</th>
        <th rowspan = 2 style="text-align: center;">Общее тренировочное время, мин.</th>
        <th colspan = 2 style="text-align: center;">Абсолютный прирост, мин.</th>
        <th colspan=2 style="text-align: center;">Темп роста, %</th>
        <th colspan=2 style="text-align: center;">Темп прироста, %</th>
        <tr>
            <td style="text-align: center;">Цепной</td>
            <td style="text-align: center;">Базисный</td>
            
            <td style="text-align: center;">Цепной</td>
            <td style="text-align: center;">Базисный</td>
            
            <td style="text-align: center;">Цепной</td>
            <td style="text-align: center;">Базисный</td>
        </tr>
           
    </tr>

    @if (ViewBag.TotalTrainingDuration is not null)
    {
        TrainingStatisticalTotalDurationView prev;
        
        @for (int i = 0; i < (ViewBag.TotalTrainingDuration as IEnumerable<TrainingStatisticalTotalDurationView>).Count(); i++)
        {
            TrainingStatisticalTotalDurationView firstTraining = ViewBag.TotalTrainingDuration[0];
            TrainingStatisticalTotalDurationView currentTraining = ViewBag.TotalTrainingDuration[i];
            
            if (i == 0)
            {
                <tr>
                    <td style="text-align: center;">@(i + 1)</td>
                    <td style="text-align: center;">@currentTraining.Date.ToShortDateString()</td>
                    <td style="text-align: center;">@Math.Round(currentTraining.TotalDuration.TotalMinutes)</td>
                    <td style="text-align: center;">–</td>
                    <td style="text-align: center;">–</td>
                    <td style="text-align: center;">–</td>
                    <td style="text-align: center;">–</td>
                    <td style="text-align: center;">–</td>
                    <td style="text-align: center;">–</td>
                </tr>
            }
            else
            {
                prev = ViewBag.TotalTrainingDuration[i - 1];

                double chainGrowthRate = currentTraining.TotalDuration.TotalMinutes / prev.TotalDuration.TotalMinutes * 100;
                double baseGrowthRate = currentTraining.TotalDuration.TotalMinutes / firstTraining.TotalDuration.TotalMinutes * 100;
                    
                <tr>
                    <td style="text-align: center;">@(i + 1)</td>
                    <td style="text-align: center;">@currentTraining.Date.ToShortDateString()</td>
                    <td style="text-align: center;">@Math.Round(currentTraining.TotalDuration.TotalMinutes)</td>
                    <td style="text-align: center;">@Math.Round((currentTraining.TotalDuration.TotalMinutes - prev.TotalDuration.TotalMinutes))</td>
                    <td style="text-align: center;">@Math.Round((currentTraining.TotalDuration.TotalMinutes - firstTraining.TotalDuration.TotalMinutes))</td>
                    <td style="text-align: center;">@(chainGrowthRate.ToString("0.00"))</td>
                    <td style="text-align: center;">@(baseGrowthRate.ToString("0.00"))</td>
                    <td style="text-align: center;">@((chainGrowthRate - 100).ToString("0.00"))</td>
                    <td style="text-align: center;">@((baseGrowthRate - 100).ToString("0.00"))</td>
                   
                </tr>
            }
        }
    }
</table>
<div id="custom_div">
    <div id="chart" ></div>

    <br>
        <h5 style="width: 1200px;">На графике прослеживаются периодические сезонные колебания.
            Периодическое снижение тренировочного времени говорит об уменьшении интенсивности тренировок.</h5>
    <br>

    <div id="chart2" ></div>

    <br>
        <h5 style="width: 1200px;">На графике прослеживаются периодические сезонные колебания.
            Периодическое снижение количества тренировок в день говорит снижении интенсивности тренировочного процесса.</h5>
    <br>

    <div id="chart3" ></div>
    <br>
        <h5 style="width: 1200px;">На графике прослеживаются периодические сезонные колебания.
            Периодическое снижение количества рассылок сообщений в день свиедетельствуют об окончании соревновательных мероприятий.</h5>
    <br>
</div>

</body>


@if (ViewBag.TotalTrainingDuration is not null)
{
    @section Scripts
    {
        <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
        
        <script type="text/javascript">

        // Load the Visualization API and the corechart package.
        google.charts.load('current', {'packages':['corechart']});

         // Set a callback to run when the Google Visualization API is loaded.
         google.charts.setOnLoadCallback(drawChart);
        
          // Callback that creates and populates a data table,
          // instantiates the pie chart, passes in the data and
          // draws it.
          function drawChart() {
    
       
          var data = google.visualization.arrayToDataTable([
          ['Дата', 'Общее тренировочное время за день, мин'],
          
          @foreach (var d in ViewBag.TotalTrainingDayDuration as IEnumerable<TrainingStatisticalTotalDurationView>) {
                    <text>[new Date(@d.Date.Year, @d.Date.Month, @d.Date.Day), @d.TotalDuration.TotalMinutes],</text>
                }
                ]);


          var options = {
            title: 'График общего время тренировочного процесса по дням',
            curveType: 'function',
            legend: { position: 'bottom' }, 
            height: 500,
            width: 1200
          };

            // Instantiate and draw our chart, passing in some options.
             var chart = new google.visualization.LineChart(document.getElementById('chart'));
                   chart.draw(data, options);
          }
    </script>
    
        <script type="text/javascript">
    
                google.charts.load('current', {'packages':['corechart']});
                google.charts.setOnLoadCallback(drawChart);
          
                function drawChart() {
    
       
                var data = google.visualization.arrayToDataTable([
                ['Дата', 'Количество тренировок за день'],
          
                @foreach (var d in ViewBag.TotalTrainingCount as IEnumerable<TrainingStatisticalCountViewModel>) {
                    <text>[new Date(@d.Date.Year, @d.Date.Month, @d.Date.Day), @d.Count],</text>
                }
                ]);
          
                var options = {
                  title: 'График количества тренировок по дням',
                  curveType: 'function',
                  legend: { position: 'bottom' }, 
                  height: 500,
                  width: 1200
                };

                // Instantiate and draw our chart, passing in some options.
                 var chart = new google.visualization.LineChart(document.getElementById('chart2'));
                       chart.draw(data, options);
                  }
        </script>
    
        <script type="text/javascript">
        
                    google.charts.load('current', {'packages':['corechart']});
                    google.charts.setOnLoadCallback(drawChart);
              
                    function drawChart() {
        
           
                    var data = google.visualization.arrayToDataTable([
                    ['Дата', 'Количество рассылок за день'],
              
                    @foreach (var d in ViewBag.TotalMailingCount as IEnumerable<TrainingStatisticalMailingCount>) 
                    {
                        <text>[new Date(@d.Date.Year, @d.Date.Month, @d.Date.Day), @d.Count],</text>
                    }
                    ]);
              
                    var options = {
                      title: 'График количества рассылок по дням',
                      curveType: 'function',
                      legend: { position: 'bottom' },
                      //hAxis: { format: 'MMM'},
                      hAxis: {
                            textStyle:{color: '#FFF'}
                      },
                      height: 500,
                      width: 1200
                    };
    
                    // Instantiate and draw our chart, passing in some options.
                     var chart = new google.visualization.LineChart(document.getElementById('chart3'));
                           chart.draw(data, options);
                      }
        </script>
    }
}